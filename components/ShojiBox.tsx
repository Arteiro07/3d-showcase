/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/shoji_box.gltf -o components/ShojiBox.tsx --types 
*/

import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoadTexture } from "@/hooks/useTextureLoader";

type GLTFResult = GLTF & {
	nodes: {
		["65481ab20629a77206b4739e"]: THREE.Mesh;
		ID10: THREE.Mesh;
		ID10_1: THREE.Mesh;
		ID10_2: THREE.Mesh;
		["65481ab20629a77206b4739e004"]: THREE.Mesh;
		["65481ab20629a77206b4739e005"]: THREE.Mesh;
		ID44: THREE.Mesh;
		ID44_1: THREE.Mesh;
		ID44_2: THREE.Mesh;
		["65481ab20629a77206b4739e009"]: THREE.Mesh;
		["65481ab20629a77206b4739e010"]: THREE.Mesh;
		["65481ab20629a77206b4739e011"]: THREE.Mesh;
	};
	materials: {
		ID9: THREE.MeshStandardMaterial;
		ID16: THREE.MeshStandardMaterial;
		ID23: THREE.MeshStandardMaterial;
		ID30: THREE.MeshStandardMaterial;
		ID37: THREE.MeshStandardMaterial;
		ID68: THREE.MeshStandardMaterial;
	};
	animations: GLTFAction[];
};

interface GLTFAction extends THREE.AnimationClip {
	name: ActionName;
}

type ActionName = "open" | "65481ab20629a77206b4739e.006Action";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

type ContextType = Record<
	string,
	React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function ShojiBox(props: JSX.IntrinsicElements["group"]) {
	const brown = "#5B270B";
	const shoji = "#D4C7B2";
	const [open, setOpen] = useState(false);
	const group = useRef<THREE.Group>(null);
	const { nodes, materials, animations } = useGLTF(
		"/models/shoji_box.gltf"
	) as GLTFResult;
	const { actions } = useAnimations(animations, group);

	const { paperTexture_Props, goldTexture_Props, plasticTexture_Props } =
		useLoadTexture();

	const handleClick = () => {
		if (open) {
			setOpen(false);
			if (actions.open && actions["65481ab20629a77206b4739e.006Action"]) {
				actions["65481ab20629a77206b4739e.006Action"].timeScale = -1;
				actions["65481ab20629a77206b4739e.006Action"].paused = false;
				actions["65481ab20629a77206b4739e.006Action"].play();
				actions.open.timeScale = -1;
				actions.open.paused = false;
				actions.open.play();
			}
		} else {
			setOpen(true);
			if (actions.open && actions["65481ab20629a77206b4739e.006Action"]) {
				actions["65481ab20629a77206b4739e.006Action"].timeScale = 1;
				actions["65481ab20629a77206b4739e.006Action"].paused = false;
				actions["65481ab20629a77206b4739e.006Action"].play();
				actions["65481ab20629a77206b4739e.006Action"].clampWhenFinished = true;
				actions["65481ab20629a77206b4739e.006Action"].loop = THREE.LoopOnce;
				actions.open.timeScale = 1;
				actions.open.paused = false;
				actions.open.clampWhenFinished = true;
				actions.open.loop = THREE.LoopOnce;
				actions.open.play();
			}
		}
	};
	// useEffect(() => {
	// 	document.body.style.cursor = hovered ? "pointer" : "auto";
	// }, [hovered]);

	console.log(actions);
	return (
		<group ref={group} {...props} dispose={null}>
			<group name="Scene">
				<mesh
					name="65481ab20629a77206b4739e"
					geometry={nodes["65481ab20629a77206b4739e"].geometry}
				>
					<meshStandardMaterial {...paperTexture_Props} transparent />
				</mesh>
				<group name="65481ab20629a77206b4739e001" onClick={handleClick}>
					<mesh name="ID10" geometry={nodes.ID10.geometry}>
						<meshStandardMaterial {...goldTexture_Props} metalness={1} />
					</mesh>
					<mesh name="ID10_1" geometry={nodes.ID10_1.geometry}>
						<meshStandardMaterial
							{...paperTexture_Props}
							transparent
							color={shoji}
						/>
					</mesh>
					<mesh name="ID10_2" geometry={nodes.ID10_2.geometry}>
						<meshStandardMaterial {...plasticTexture_Props} color={brown} />
					</mesh>
				</group>
				<mesh
					name="65481ab20629a77206b4739e004"
					geometry={nodes["65481ab20629a77206b4739e004"].geometry}
				>
					<meshStandardMaterial
						{...paperTexture_Props}
						transparent
						color={shoji}
					/>
				</mesh>
				<mesh
					name="65481ab20629a77206b4739e005"
					geometry={nodes["65481ab20629a77206b4739e005"].geometry}
				>
					<meshStandardMaterial {...plasticTexture_Props} color={brown} />
				</mesh>
				<group name="65481ab20629a77206b4739e006" onClick={handleClick}>
					<mesh name="ID44" geometry={nodes.ID44.geometry}>
						<meshStandardMaterial {...goldTexture_Props} metalness={1} />
					</mesh>
					<mesh name="ID44_1" geometry={nodes.ID44_1.geometry}>
						<meshStandardMaterial
							{...paperTexture_Props}
							color={shoji}
							metalness={0}
						/>
					</mesh>
					<mesh name="ID44_2" geometry={nodes.ID44_2.geometry}>
						<meshStandardMaterial {...plasticTexture_Props} color={brown} />
					</mesh>
				</group>
				<mesh
					name="65481ab20629a77206b4739e009"
					geometry={nodes["65481ab20629a77206b4739e009"].geometry}
				>
					<meshStandardMaterial
						{...paperTexture_Props}
						transparent
						color={shoji}
					/>
				</mesh>
				<mesh
					name="65481ab20629a77206b4739e010"
					geometry={nodes["65481ab20629a77206b4739e010"].geometry}
				>
					<meshStandardMaterial
						{...paperTexture_Props}
						transparent
						color={shoji}
					/>
				</mesh>
				<mesh
					name="65481ab20629a77206b4739e011"
					geometry={nodes["65481ab20629a77206b4739e011"].geometry}
				>
					<meshStandardMaterial
						{...paperTexture_Props}
						transparent
						color={shoji}
					/>
				</mesh>
			</group>
		</group>
	);
}

useGLTF.preload("/models/shoji_box.gltf");
